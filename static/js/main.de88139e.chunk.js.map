{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/ScrollBox.js","components/Error.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","username","id","className","alt","src","width","CardList","robots","map","robot","index","SearchBox","props","type","placeholder","onChange","searchChange","ScrollBox","style","overflowY","border","maxWidth","height","padding","children","Error","state","hasError","error","info","this","setState","React","Component","App","console","log","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,GAC3B,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,GAAMI,MAAM,QAC3D,gCACI,6BAAKN,IACL,4BAAIC,WCgBLM,EArBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAGf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAOC,GACf,OACI,cAAC,EAAD,CAEIX,KAAMU,EAAMV,KACZC,SAAUS,EAAMT,SAChBC,GAAIQ,EAAMR,IAHLQ,EAAMR,UCIxBU,EAdG,SAACC,GACf,OACI,8BACI,uBACIV,UAAU,uCACVW,KAAK,OACLC,YAAY,eACZC,SAAYH,EAAMI,kBCKnBC,EAZG,SAACL,GACf,OACI,qBAAKM,MAAS,CAACC,UAAW,SACtBC,OAAO,oBACPC,SAAS,eACTC,OAAO,QACPC,QAAS,QAJb,SAKKX,EAAMY,YCeJC,E,kDArBX,WAAYb,GAAQ,IAAD,8BACf,gBACKc,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,+DAGAG,KAAKlB,MAAMY,a,GAjBVQ,IAAMC,WCuEXC,G,wDAjEX,aAAe,IAAD,6BACVC,QAAQC,IAAI,gBACZ,gBASJC,eAAiB,SAACC,GAId,EAAKP,SAAS,CAACQ,YAAaD,EAAME,OAAOC,SAZzC,EAAKf,MAAQ,CACTnB,OAAQ,GACRgC,YAAa,IALP,E,qDAoBd,WAAqB,IAAD,OAChBJ,QAAQC,IAAI,qBACZM,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKf,SAAS,CAACxB,OAAQuC,S,oBAI9C,WACIX,QAAQC,IAAI,UAEZ,MAAgCN,KAAKJ,MAA7BnB,EAAR,EAAQA,OAAQgC,EAAhB,EAAgBA,YAEVQ,EAAiBjB,KAAKJ,MAAMnB,OAAOyC,QACrC,SAAAvC,GAAK,OAAIA,EAAMV,KACVkD,cACAC,SAASX,EAAYU,kBAG9B,OAAoB,GAAjB1C,EAAO4C,OAGF,8BACI,oBAAIjD,UAAU,KAAd,0BAOJ,sBAAKA,UAAU,KAAf,UACI,oBAAIA,UAAU,MAAd,yBACA,cAAC,EAAD,CAAWc,aAAgBc,KAAKO,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACK,cAAC,EAAD,CAAU9B,OAAUwC,e,GAxD/Bf,IAAMC,YCKTmB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAK1BZ,M","file":"static/js/main.de88139e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({name, username, id}) => {\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 ma2 pa3 grow bw2 shadow-5\">\r\n            <img alt=\"avatar\" src={`https://robohash.org/${id}`} width=\"200\"/>\r\n            <div> \r\n                <h2>{name}</h2>\r\n                <p>{username}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({robots}) => {\r\n    // if(true)\r\n    //     throw new Error(\"test error\");\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((robot, index) => {\r\n                    return (\r\n                        <Card \r\n                            key={robot.id}\r\n                            name={robot.name}\r\n                            username={robot.username}\r\n                            id={robot.id}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = (props) => {\r\n    return(\r\n        <div>\r\n            <input\r\n                className=\"pa2 mb3 ba b--green bg-lightest-blue\" \r\n                type=\"text\" \r\n                placeholder=\"Search Robot\"\r\n                onChange = {props.searchChange}    \r\n                />\r\n                \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst ScrollBox = (props) => {\r\n    return (\r\n        <div style = {{overflowY: 'scroll', \r\n            border:'2px solid #0ccac4', \r\n            maxWidth:'wrap-content', \r\n            height:'400px',\r\n            padding: '1rem'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScrollBox;","import React from \"react\";\r\n\r\nclass Error extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1>Oops. Something Bad Happened.</h1>\r\n        }\r\n        else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Error;","import React from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport ScrollBox from \"../components/ScrollBox\";\r\nimport Error from \"../components/Error\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        console.log(\"constructor\");\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    // functionName = (...) => {}\r\n    // use this syntax for custom functions to avoid errors while using 'this' within the functions\r\n    onSearchChange = (event) => {\r\n        // console.log(event.target.value);\r\n        \r\n        // set new state from search text\r\n        this.setState({searchField: event.target.value});\r\n    }\r\n    \r\n    // react component lifecycle\r\n    // https://reactjs.org/docs/react-component.html#mounting\r\n    componentDidMount() {\r\n        console.log(\"componentDidMount\");\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(response => response.json())\r\n            .then(users => this.setState({robots: users}));\r\n    }\r\n\r\n    // filter robots based on value in search field\r\n    render () {\r\n        console.log(\"render\");\r\n\r\n        const { robots, searchField } = this.state;\r\n\r\n        const filteredRobots = this.state.robots.filter(\r\n            robot => robot.name\r\n                .toLowerCase()\r\n                .includes(searchField.toLowerCase())\r\n        );   \r\n\r\n        if(robots.length == 0){\r\n            // inform user\r\n            return (\r\n                <div>\r\n                    <h1 className=\"tc\">loading...</h1>\r\n                </div>\r\n            )\r\n        } else {\r\n            // article on map(), reduce(), filter()\r\n            // https://medium.com/poka-techblog/simplify-your-javascript-use-map-reduce-and-filter-bd02c593cc2d\r\n            return (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"mb3\">Robofriends</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange}/>\r\n                    <ScrollBox>\r\n                        <Error>\r\n                             <CardList robots = {filteredRobots} />\r\n                        </Error>\r\n                    </ScrollBox>\r\n                    \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}